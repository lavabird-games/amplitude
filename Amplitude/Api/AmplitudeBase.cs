using System.Text.Json.Serialization;

namespace Lavabird.Amplitude.Api;

[JsonDerivedType(typeof(AmplitudeEvent), typeDiscriminator: "event")]
[JsonDerivedType(typeof(AmplitudeIdentify), typeDiscriminator: "identify")]
public abstract class AmplitudeBase
{
	/// <summary>
	/// ID of the user responsible for this event. Can be a generated anonymous ID. One of either a UserID or DeviceID
	/// must be set when calling the Amplitude API.
	/// </summary>
	[JsonPropertyName("user_id")]
	[JsonInclude]
	public string? UserId { get; private set; }
    
	/// <summary>
	/// The unique ID for the device responsible for this event. One of either a UserID or DeviceID must be set when
	/// calling the Amplitude API. If a DeviceId isn't sent with the event, then a hashed version of the UserId will
	/// be generated by Amplitude.
	/// </summary>
	[JsonPropertyName("device_id")]
	[JsonInclude]
	public string? DeviceId { get; private set; }

	protected AmplitudeBase(AmplitudeIdentity identity)
	{
		UserId = identity.UserId;
		DeviceId = identity.DeviceId;
	}
	
	protected AmplitudeBase()
	{
		// For deserialization
	}
}